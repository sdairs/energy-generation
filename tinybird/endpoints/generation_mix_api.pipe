DESCRIPTION >
	Provides access to data that shows the mix of energy generation sources. Columns present the percentage of total energy that was generated by a particular source. Data is provided at a 30 minute granularity.
Use `param_from` & `param_to` to supply a date range for Time Series data
Use `latest` to get a single row representing the latest generation mix data


TOKEN "dashboard" READ

TOKEN "generation_mix_api_endpoint_read_2789" READ

NODE one_day
SQL >

    SELECT * FROM day_generation_mix_mv
    WHERE time_from > now() - interval 1 day



NODE one_week
SQL >

    SELECT 
        time_from,
        floor(toFloat32(avgMerge(coal)), 1) AS coal,
        floor(toFloat32(avgMerge(gas)), 1) AS gas,
        floor(toFloat32(avgMerge(fossils)), 1) AS fossils,
        floor(toFloat32(avgMerge(hydro)), 1) AS hydro,
        floor(toFloat32(avgMerge(solar)), 1) AS solar,
        floor(toFloat32(avgMerge(wind)), 1) AS wind,
        floor(toFloat32(avgMerge(renewables)), 1) AS renewables,
        floor(toFloat32(avgMerge(other)), 1) AS other,
        floor(toFloat32(avgMerge(imports)), 1) AS imports,
        floor(toFloat32(avgMerge(nuclear)), 1) AS nuclear,
        floor(toFloat32(avgMerge(biomass)), 1) AS biomass,
        floor(toFloat32(avgMerge(other_sources)), 1) AS other_sources
    FROM daily_generation_mix_avg_mv
    WHERE time_from >= now() - interval 7 day
    GROUP BY time_from
    ORDER BY time_from ASC



NODE one_year
SQL >

    SELECT 
        time_from,
        floor(toFloat32(avgMerge(coal)), 1) AS coal,
        floor(toFloat32(avgMerge(gas)), 1) AS gas,
        floor(toFloat32(avgMerge(fossils)), 1) AS fossils,
        floor(toFloat32(avgMerge(hydro)), 1) AS hydro,
        floor(toFloat32(avgMerge(solar)), 1) AS solar,
        floor(toFloat32(avgMerge(wind)), 1) AS wind,
        floor(toFloat32(avgMerge(renewables)), 1) AS renewables,
        floor(toFloat32(avgMerge(other)), 1) AS other,
        floor(toFloat32(avgMerge(imports)), 1) AS imports,
        floor(toFloat32(avgMerge(nuclear)), 1) AS nuclear,
        floor(toFloat32(avgMerge(biomass)), 1) AS biomass,
        floor(toFloat32(avgMerge(other_sources)), 1) AS other_sources
    FROM daily_generation_mix_avg_mv
    WHERE time_from >= now() - interval 365 day
    GROUP BY time_from
    ORDER BY time_from ASC



NODE one_decade
SQL >

    SELECT
        time_from,
        floor(toFloat32(avgMerge(coal)), 1) AS coal,
        floor(toFloat32(avgMerge(gas)), 1) AS gas,
        floor(toFloat32(avgMerge(fossils)), 1) AS fossils,
        floor(toFloat32(avgMerge(hydro)), 1) AS hydro,
        floor(toFloat32(avgMerge(solar)), 1) AS solar,
        floor(toFloat32(avgMerge(wind)), 1) AS wind,
        floor(toFloat32(avgMerge(renewables)), 1) AS renewables,
        floor(toFloat32(avgMerge(other)), 1) AS other,
        floor(toFloat32(avgMerge(imports)), 1) AS imports,
        floor(toFloat32(avgMerge(nuclear)), 1) AS nuclear,
        floor(toFloat32(avgMerge(biomass)), 1) AS biomass,
        floor(toFloat32(avgMerge(other_sources)), 1) AS other_sources
    FROM monthly_generation_mix_avg_mv
    WHERE time_from >= now() - interval 10 year
    GROUP BY time_from
    ORDER BY time_from ASC



NODE latest
SQL >

    SELECT *
    FROM day_generation_mix_mv
    ORDER BY time_from DESC
    LIMIT 1



NODE endpoint
SQL >

    %
    SELECT *
    FROM
    {% if defined(latest) %}
    latest
    {% elif defined(day) %}
    one_day
    {% elif defined(week) %}
    one_week
    {% elif defined(year) %}
    one_year
    {% elif defined(decade) %}
    one_decade
    {% else %}
    one_day
    {% end %}


